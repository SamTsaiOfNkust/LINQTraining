//---------------------------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated by T4Model template for T4 (https://github.com/linq2db/linq2db).
//    Changes to this file may cause incorrect behavior and will be lost if the code is regenerated.
// </auto-generated>
//---------------------------------------------------------------------------------------------------

#pragma warning disable 1591

using System;
using System.Collections.Generic;
using System.Linq;

using LinqToDB;
using LinqToDB.Mapping;

namespace DataModels
{
	/// <summary>
	/// Database       : chinook
	/// Data Source    : chinook
	/// Server Version : 3.19.3
	/// </summary>
	public partial class ChinookDB : LinqToDB.Data.DataConnection
	{
		public ITable<Album>         Albums         { get { return this.GetTable<Album>(); } }
		public ITable<Artist>        Artists        { get { return this.GetTable<Artist>(); } }
		public ITable<Customer>      Customers      { get { return this.GetTable<Customer>(); } }
		public ITable<Employee>      Employees      { get { return this.GetTable<Employee>(); } }
		public ITable<Genre>         Genres         { get { return this.GetTable<Genre>(); } }
		public ITable<Invoice>       Invoices       { get { return this.GetTable<Invoice>(); } }
		public ITable<InvoiceItem>   InvoiceItems   { get { return this.GetTable<InvoiceItem>(); } }
		public ITable<MediaType>     MediaTypes     { get { return this.GetTable<MediaType>(); } }
		public ITable<Playlist>      Playlists      { get { return this.GetTable<Playlist>(); } }
		public ITable<PlaylistTrack> PlaylistTracks { get { return this.GetTable<PlaylistTrack>(); } }
		public ITable<Track>         Tracks         { get { return this.GetTable<Track>(); } }

		public ChinookDB()
		{
			InitDataContext();
			InitMappingSchema();
		}

		public ChinookDB(string configuration)
			: base(configuration)
		{
			InitDataContext();
			InitMappingSchema();
		}

		partial void InitDataContext  ();
		partial void InitMappingSchema();
	}

	[Table("albums")]
	public partial class Album
	{
		[PrimaryKey, Identity] public long   AlbumId  { get; set; } // integer
		[Column,     NotNull ] public string Title    { get; set; } // nvarchar(160)
		[Column,     NotNull ] public long   ArtistId { get; set; } // integer

		#region Associations

		/// <summary>
		/// FK_albums_0_0
		/// </summary>
		[Association(ThisKey="ArtistId", OtherKey="ArtistId", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_albums_0_0", BackReferenceName="Albums")]
		public Artist Artist { get; set; }

		/// <summary>
		/// FK_tracks_2_0_BackReference
		/// </summary>
		[Association(ThisKey="AlbumId", OtherKey="AlbumId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Track> Tracks { get; set; }

		#endregion
	}

	[Table("artists")]
	public partial class Artist
	{
		[PrimaryKey, Identity] public long   ArtistId { get; set; } // integer
		[Column,     Nullable] public string Name     { get; set; } // nvarchar(120)

		#region Associations

		/// <summary>
		/// FK_albums_0_0_BackReference
		/// </summary>
		[Association(ThisKey="ArtistId", OtherKey="ArtistId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Album> Albums { get; set; }

		#endregion
	}

	[Table("customers")]
	public partial class Customer
	{
		[PrimaryKey, Identity   ] public long   CustomerId   { get; set; } // integer
		[Column,     NotNull    ] public string FirstName    { get; set; } // nvarchar(40)
		[Column,     NotNull    ] public string LastName     { get; set; } // nvarchar(20)
		[Column,        Nullable] public string Company      { get; set; } // nvarchar(80)
		[Column,        Nullable] public string Address      { get; set; } // nvarchar(70)
		[Column,        Nullable] public string City         { get; set; } // nvarchar(40)
		[Column,        Nullable] public string State        { get; set; } // nvarchar(40)
		[Column,        Nullable] public string Country      { get; set; } // nvarchar(40)
		[Column,        Nullable] public string PostalCode   { get; set; } // nvarchar(10)
		[Column,        Nullable] public string Phone        { get; set; } // nvarchar(24)
		[Column,        Nullable] public string Fax          { get; set; } // nvarchar(24)
		[Column,     NotNull    ] public string Email        { get; set; } // nvarchar(60)
		[Column,        Nullable] public long?  SupportRepId { get; set; } // integer

		#region Associations

		/// <summary>
		/// FK_invoices_0_0_BackReference
		/// </summary>
		[Association(ThisKey="CustomerId", OtherKey="CustomerId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Invoice> Invoices { get; set; }

		/// <summary>
		/// FK_customers_0_0
		/// </summary>
		[Association(ThisKey="SupportRepId", OtherKey="EmployeeId", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_customers_0_0", BackReferenceName="Customers")]
		public Employee SupportRep { get; set; }

		#endregion
	}

	[Table("employees")]
	public partial class Employee
	{
		[PrimaryKey, Identity   ] public long      EmployeeId { get; set; } // integer
		[Column,     NotNull    ] public string    LastName   { get; set; } // nvarchar(20)
		[Column,     NotNull    ] public string    FirstName  { get; set; } // nvarchar(20)
		[Column,        Nullable] public string    Title      { get; set; } // nvarchar(30)
		[Column,        Nullable] public long?     ReportsTo  { get; set; } // integer
		[Column,        Nullable] public DateTime? BirthDate  { get; set; } // datetime
		[Column,        Nullable] public DateTime? HireDate   { get; set; } // datetime
		[Column,        Nullable] public string    Address    { get; set; } // nvarchar(70)
		[Column,        Nullable] public string    City       { get; set; } // nvarchar(40)
		[Column,        Nullable] public string    State      { get; set; } // nvarchar(40)
		[Column,        Nullable] public string    Country    { get; set; } // nvarchar(40)
		[Column,        Nullable] public string    PostalCode { get; set; } // nvarchar(10)
		[Column,        Nullable] public string    Phone      { get; set; } // nvarchar(24)
		[Column,        Nullable] public string    Fax        { get; set; } // nvarchar(24)
		[Column,        Nullable] public string    Email      { get; set; } // nvarchar(60)

		#region Associations

		/// <summary>
		/// FK_customers_0_0_BackReference
		/// </summary>
		[Association(ThisKey="EmployeeId", OtherKey="SupportRepId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Customer> Customers { get; set; }

		/// <summary>
		/// FK_employees_0_0
		/// </summary>
		[Association(ThisKey="ReportsTo", OtherKey="EmployeeId", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_employees_0_0", BackReferenceName="FkEmployees00BackReferences")]
		public Employee FkEmployees00 { get; set; }

		/// <summary>
		/// FK_employees_0_0_BackReference
		/// </summary>
		[Association(ThisKey="EmployeeId", OtherKey="ReportsTo", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Employee> FkEmployees00BackReferences { get; set; }

		#endregion
	}

	[Table("genres")]
	public partial class Genre
	{
		[PrimaryKey, Identity] public long   GenreId { get; set; } // integer
		[Column,     Nullable] public string Name    { get; set; } // nvarchar(120)

		#region Associations

		/// <summary>
		/// FK_tracks_1_0_BackReference
		/// </summary>
		[Association(ThisKey="GenreId", OtherKey="GenreId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Track> Tracks { get; set; }

		#endregion
	}

	[Table("invoices")]
	public partial class Invoice
	{
		[PrimaryKey, Identity   ] public long     InvoiceId         { get; set; } // integer
		[Column,     NotNull    ] public long     CustomerId        { get; set; } // integer
		[Column,     NotNull    ] public DateTime InvoiceDate       { get; set; } // datetime
		[Column,        Nullable] public string   BillingAddress    { get; set; } // nvarchar(70)
		[Column,        Nullable] public string   BillingCity       { get; set; } // nvarchar(40)
		[Column,        Nullable] public string   BillingState      { get; set; } // nvarchar(40)
		[Column,        Nullable] public string   BillingCountry    { get; set; } // nvarchar(40)
		[Column,        Nullable] public string   BillingPostalCode { get; set; } // nvarchar(10)
		[Column,     NotNull    ] public decimal  Total             { get; set; } // numeric

		#region Associations

		/// <summary>
		/// FK_invoices_0_0
		/// </summary>
		[Association(ThisKey="CustomerId", OtherKey="CustomerId", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_invoices_0_0", BackReferenceName="Invoices")]
		public Customer Customer { get; set; }

		/// <summary>
		/// FK_invoice_items_1_0_BackReference
		/// </summary>
		[Association(ThisKey="InvoiceId", OtherKey="InvoiceId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InvoiceItem> Invoiceitems { get; set; }

		#endregion
	}

	[Table("invoice_items")]
	public partial class InvoiceItem
	{
		[PrimaryKey, Identity] public long    InvoiceLineId { get; set; } // integer
		[Column,     NotNull ] public long    InvoiceId     { get; set; } // integer
		[Column,     NotNull ] public long    TrackId       { get; set; } // integer
		[Column,     NotNull ] public decimal UnitPrice     { get; set; } // numeric
		[Column,     NotNull ] public long    Quantity      { get; set; } // integer

		#region Associations

		/// <summary>
		/// FK_invoice_items_1_0
		/// </summary>
		[Association(ThisKey="InvoiceId", OtherKey="InvoiceId", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_invoice_items_1_0", BackReferenceName="Invoiceitems")]
		public Invoice Invoice { get; set; }

		/// <summary>
		/// FK_invoice_items_0_0
		/// </summary>
		[Association(ThisKey="TrackId", OtherKey="TrackId", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_invoice_items_0_0", BackReferenceName="Invoiceitems")]
		public Track Track { get; set; }

		#endregion
	}

	[Table("media_types")]
	public partial class MediaType
	{
		[PrimaryKey, Identity] public long   MediaTypeId { get; set; } // integer
		[Column,     Nullable] public string Name        { get; set; } // nvarchar(120)

		#region Associations

		/// <summary>
		/// FK_tracks_0_0_BackReference
		/// </summary>
		[Association(ThisKey="MediaTypeId", OtherKey="MediaTypeId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<Track> Tracks { get; set; }

		#endregion
	}

	[Table("playlists")]
	public partial class Playlist
	{
		[PrimaryKey, Identity] public long   PlaylistId { get; set; } // integer
		[Column,     Nullable] public string Name       { get; set; } // nvarchar(120)

		#region Associations

		/// <summary>
		/// FK_playlist_track_1_0_BackReference
		/// </summary>
		[Association(ThisKey="PlaylistId", OtherKey="PlaylistId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<PlaylistTrack> Playlisttracks { get; set; }

		#endregion
	}

	[Table("playlist_track")]
	public partial class PlaylistTrack
	{
		[PrimaryKey(0), NotNull] public long PlaylistId { get; set; } // integer
		[PrimaryKey(1), NotNull] public long TrackId    { get; set; } // integer

		#region Associations

		/// <summary>
		/// FK_playlist_track_1_0
		/// </summary>
		[Association(ThisKey="PlaylistId", OtherKey="PlaylistId", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_playlist_track_1_0", BackReferenceName="Playlisttracks")]
		public Playlist Playlist { get; set; }

		/// <summary>
		/// FK_playlist_track_0_0
		/// </summary>
		[Association(ThisKey="TrackId", OtherKey="TrackId", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_playlist_track_0_0", BackReferenceName="Playlisttracks")]
		public Track Track { get; set; }

		#endregion
	}

	[Table("tracks")]
	public partial class Track
	{
		[PrimaryKey, Identity   ] public long    TrackId      { get; set; } // integer
		[Column,     NotNull    ] public string  Name         { get; set; } // nvarchar(200)
		[Column,        Nullable] public long?   AlbumId      { get; set; } // integer
		[Column,     NotNull    ] public long    MediaTypeId  { get; set; } // integer
		[Column,        Nullable] public long?   GenreId      { get; set; } // integer
		[Column,        Nullable] public string  Composer     { get; set; } // nvarchar(220)
		[Column,     NotNull    ] public long    Milliseconds { get; set; } // integer
		[Column,        Nullable] public long?   Bytes        { get; set; } // integer
		[Column,     NotNull    ] public decimal UnitPrice    { get; set; } // numeric

		#region Associations

		/// <summary>
		/// FK_tracks_2_0
		/// </summary>
		[Association(ThisKey="AlbumId", OtherKey="AlbumId", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_tracks_2_0", BackReferenceName="Tracks")]
		public Album Album { get; set; }

		/// <summary>
		/// FK_tracks_1_0
		/// </summary>
		[Association(ThisKey="GenreId", OtherKey="GenreId", CanBeNull=true, Relationship=Relationship.ManyToOne, KeyName="FK_tracks_1_0", BackReferenceName="Tracks")]
		public Genre Genre { get; set; }

		/// <summary>
		/// FK_invoice_items_0_0_BackReference
		/// </summary>
		[Association(ThisKey="TrackId", OtherKey="TrackId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<InvoiceItem> Invoiceitems { get; set; }

		/// <summary>
		/// FK_tracks_0_0
		/// </summary>
		[Association(ThisKey="MediaTypeId", OtherKey="MediaTypeId", CanBeNull=false, Relationship=Relationship.ManyToOne, KeyName="FK_tracks_0_0", BackReferenceName="Tracks")]
		public MediaType MediaType { get; set; }

		/// <summary>
		/// FK_playlist_track_0_0_BackReference
		/// </summary>
		[Association(ThisKey="TrackId", OtherKey="TrackId", CanBeNull=true, Relationship=Relationship.OneToMany, IsBackReference=true)]
		public IEnumerable<PlaylistTrack> Playlisttracks { get; set; }

		#endregion
	}

	public static partial class TableExtensions
	{
		public static Album Find(this ITable<Album> table, long AlbumId)
		{
			return table.FirstOrDefault(t =>
				t.AlbumId == AlbumId);
		}

		public static Artist Find(this ITable<Artist> table, long ArtistId)
		{
			return table.FirstOrDefault(t =>
				t.ArtistId == ArtistId);
		}

		public static Customer Find(this ITable<Customer> table, long CustomerId)
		{
			return table.FirstOrDefault(t =>
				t.CustomerId == CustomerId);
		}

		public static Employee Find(this ITable<Employee> table, long EmployeeId)
		{
			return table.FirstOrDefault(t =>
				t.EmployeeId == EmployeeId);
		}

		public static Genre Find(this ITable<Genre> table, long GenreId)
		{
			return table.FirstOrDefault(t =>
				t.GenreId == GenreId);
		}

		public static Invoice Find(this ITable<Invoice> table, long InvoiceId)
		{
			return table.FirstOrDefault(t =>
				t.InvoiceId == InvoiceId);
		}

		public static InvoiceItem Find(this ITable<InvoiceItem> table, long InvoiceLineId)
		{
			return table.FirstOrDefault(t =>
				t.InvoiceLineId == InvoiceLineId);
		}

		public static MediaType Find(this ITable<MediaType> table, long MediaTypeId)
		{
			return table.FirstOrDefault(t =>
				t.MediaTypeId == MediaTypeId);
		}

		public static Playlist Find(this ITable<Playlist> table, long PlaylistId)
		{
			return table.FirstOrDefault(t =>
				t.PlaylistId == PlaylistId);
		}

		public static PlaylistTrack Find(this ITable<PlaylistTrack> table, long PlaylistId, long TrackId)
		{
			return table.FirstOrDefault(t =>
				t.PlaylistId == PlaylistId &&
				t.TrackId    == TrackId);
		}

		public static Track Find(this ITable<Track> table, long TrackId)
		{
			return table.FirstOrDefault(t =>
				t.TrackId == TrackId);
		}
	}
}

#pragma warning restore 1591
